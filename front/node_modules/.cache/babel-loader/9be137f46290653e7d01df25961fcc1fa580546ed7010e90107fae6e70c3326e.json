{"ast":null,"code":"var _jsxFileName = \"/home/noir/projects/diplom2/front/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchFile, downloadFile } from \"../api/fetch_files\";\nimport { deleteFile } from \"../api/add_files\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  label,\n  accept,\n  icon,\n  entityType,\n  entityId,\n  fileType,\n  preview = false,\n  onUpload\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState(null); // Добавляем состояние для имени файла\n  const [fileUrl, setFileUrl] = useState(null);\n  const [showPreview, setShowPreview] = useState(false);\n  const handleDownload = () => {\n    downloadFile(fileUrl, fileName);\n  };\n  const [isPdf, setIsPdf] = useState(false);\n  const token = localStorage.getItem('jwtToken');\n  // const authorizedFileUrl = ;\n  useEffect(() => {\n    // При монтировании компонента проверяем, есть ли файл на сервере\n    const checkExistingFile = async () => {\n      const fileInfo = await fetchFile(entityType, entityId, fileType);\n      if (fileInfo) {\n        var _fileInfo$fileName;\n        setFileUrl(fileInfo.fileUrl);\n        setFileName(fileInfo.fileName);\n        setIsPdf((_fileInfo$fileName = fileInfo.fileName) === null || _fileInfo$fileName === void 0 ? void 0 : _fileInfo$fileName.toLowerCase().endsWith('.pdf'));\n      }\n    };\n    checkExistingFile();\n  }, [entityType, entityId, fileType]);\n  const handleChange = async e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setFileName(selectedFile.name);\n    setIsPdf(selectedFile.name.toLowerCase().endsWith('.pdf'));\n    if (onUpload && selectedFile) {\n      await onUpload(selectedFile, {\n        entityType,\n        entityId,\n        fileType\n      });\n      // Повторно получаем файл с сервера после загрузки\n      const fileInfo = await fetchFile(entityType, entityId, fileType);\n      if (fileInfo) {\n        setFileUrl(fileInfo.fileUrl);\n        setFileName(fileInfo.fileName);\n        setIsPdf(fileInfo.fileName.toLowerCase().endsWith('.pdf'));\n      }\n    }\n  };\n  const handleDelete = async () => {\n    if (fileUrl && fileName) {\n      // Используем сохраненное имя файла\n      const success = await deleteFile(entityType, entityId, fileType, fileName);\n      if (success) {\n        setFileUrl(null);\n        setFileName(null); // Очищаем имя файла\n        setFile(null); // Очищаем состояние файла\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: fileUrl ? 'Просмотр ' + label : 'Загрузить ' + label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), !fileUrl && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: accept,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), fileUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => preview && setShowPreview(true),\n        style: {\n          cursor: preview ? \"pointer\" : \"default\"\n        },\n        title: preview ? \"Просмотреть файл\" : \"\",\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: handleDelete,\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this) : file ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-info\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this) : null, fileUrl && preview && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"custom-button\",\n      onClick: () => setShowPreview(!showPreview),\n      children: showPreview ? \"Закрыть\" : 'Открыть файл'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), showPreview && preview && (file || fileUrl) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      onClick: () => setShowPreview(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => e.stopPropagation()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), isPdf ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: file ? URL.createObjectURL(file) : `${fileUrl}${fileUrl.includes('?') ? '&' : '?'}token=${token}`,\n        width: \"1200px\",\n        height: \"790vh\",\n        title: \"PDF Preview\",\n        style: {\n          position: \"relative\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u0440\\u0435\\u0434\\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440 \\u043D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u0435\\u043D \\u0434\\u043B\\u044F \\u044D\\u0442\\u043E\\u0433\\u043E \\u0442\\u0438\\u043F\\u0430 \\u0444\\u0430\\u0439\\u043B\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), !isPdf && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownload,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#333',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            marginTop: '20px'\n          },\n          children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"7RhtOAtNrsmqiy4e34YJYXfsdhg=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","fetchFile","downloadFile","deleteFile","jsxDEV","_jsxDEV","FileUpload","label","accept","icon","entityType","entityId","fileType","preview","onUpload","_s","file","setFile","fileName","setFileName","fileUrl","setFileUrl","showPreview","setShowPreview","handleDownload","isPdf","setIsPdf","token","localStorage","getItem","checkExistingFile","fileInfo","_fileInfo$fileName","toLowerCase","endsWith","handleChange","e","selectedFile","target","files","name","handleDelete","success","className","children","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","style","cursor","title","stopPropagation","src","URL","createObjectURL","includes","width","height","position","textAlign","padding","backgroundColor","color","border","borderRadius","marginTop","_c","$RefreshReg$"],"sources":["/home/noir/projects/diplom2/front/src/components/FileUpload.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchFile, downloadFile } from \"../api/fetch_files\";\nimport { deleteFile } from \"../api/add_files\";\n\nconst FileUpload = ({\n    label,\n    accept,\n    icon,\n    entityType,\n    entityId,\n    fileType,\n    preview = false,\n    onUpload,\n}) => {\n    const [file, setFile] = useState(null);\n    const [fileName, setFileName] = useState(null); // Добавляем состояние для имени файла\n    const [fileUrl, setFileUrl] = useState(null);\n    const [showPreview, setShowPreview] = useState(false);\n    const handleDownload = () => {\n        downloadFile(fileUrl, fileName);\n    };\n    const [isPdf, setIsPdf] = useState(false);\n    const token = localStorage.getItem('jwtToken');\n    // const authorizedFileUrl = ;\n    useEffect(() => {\n        // При монтировании компонента проверяем, есть ли файл на сервере\n        const checkExistingFile = async () => {\n            const fileInfo = await fetchFile(entityType, entityId, fileType);\n            if (fileInfo) {\n                setFileUrl(fileInfo.fileUrl);\n                setFileName(fileInfo.fileName);\n                setIsPdf(fileInfo.fileName?.toLowerCase().endsWith('.pdf'));\n            }\n        };\n        checkExistingFile();\n    }, [entityType, entityId, fileType]);\n\n    const handleChange = async (e) => {\n        const selectedFile = e.target.files[0];\n        setFile(selectedFile);\n        setFileName(selectedFile.name);\n        setIsPdf(selectedFile.name.toLowerCase().endsWith('.pdf'));\n        if (onUpload && selectedFile) {\n            await onUpload(selectedFile, { entityType, entityId, fileType });\n            // Повторно получаем файл с сервера после загрузки\n            const fileInfo = await fetchFile(entityType, entityId, fileType);\n            if (fileInfo) {\n                setFileUrl(fileInfo.fileUrl);\n                setFileName(fileInfo.fileName);\n                setIsPdf(fileInfo.fileName.toLowerCase().endsWith('.pdf'));\n            }\n        }\n    };\n\n\n    const handleDelete = async () => {\n        if (fileUrl && fileName) { // Используем сохраненное имя файла\n            const success = await deleteFile(entityType, entityId, fileType, fileName);\n            if (success) {\n                setFileUrl(null);\n                setFileName(null); // Очищаем имя файла\n                setFile(null); // Очищаем состояние файла\n            }\n        }\n    };\n\n    return (\n        <div className=\"file-upload\">\n        <label>{fileUrl ? 'Просмотр ' + label : 'Загрузить ' + label }</label>\n        {!fileUrl && (\n            <input type=\"file\" accept={accept} onChange={handleChange} />\n        )}\n        {fileUrl ? (\n            <div className=\"file-info\">\n            <span\n            onClick={() => preview && setShowPreview(true)}\n            style={{ cursor: preview ? \"pointer\" : \"default\" }}\n            title={preview ? \"Просмотреть файл\" : \"\"}\n            >\n            {icon}\n            </span>\n            <span>{fileName}</span> {/* Используем сохраненное имя файла */}\n            <button className=\"delete-button\" onClick={handleDelete}>Удалить</button>\n            </div>\n        ) : file ? (\n            <div className=\"file-info\">\n            <span>{file.name}</span>\n            </div>\n        ) : null}\n        {fileUrl && preview && (\n            <button className=\"custom-button\" onClick={() => setShowPreview(!showPreview)}>\n            {showPreview ? \"Закрыть\" : 'Открыть файл'}\n            </button>\n        )}\n        {showPreview && preview && (file || fileUrl) && (\n            <div\n            className=\"modal\"\n            onClick={() => setShowPreview(false)}\n            >\n            <div\n            onClick={(e) => e.stopPropagation()}\n            >\n\n            </div>\n            {isPdf ? (\n                <iframe\n                src={file ? URL.createObjectURL(file) : `${fileUrl}${fileUrl.includes('?') ? '&' : '?'}token=${token}`}\n                width=\"1200px\"\n                height=\"790vh\"\n                title=\"PDF Preview\"\n                style={{ position:\"relative\"}}\n                />\n            ) : (\n                <div style={{ textAlign: 'center', padding: '20px' }}>\n                <p>Предпросмотр недоступен для этого типа файла</p>\n                {!isPdf && (\n                    <button\n                    onClick={handleDownload}\n                    style={{\n                        padding: '10px 20px',\n                        backgroundColor: '#333',\n                        color: '#fff',\n                        border: 'none',\n                        borderRadius: '4px',\n                        cursor: 'pointer',\n                        marginTop: '20px'\n                    }}\n                    >\n                    Скачать файл\n                    </button>\n                )}\n                </div>\n            )}\n            </div>\n        )}\n        </div>\n    );\n};\n\nexport default FileUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}