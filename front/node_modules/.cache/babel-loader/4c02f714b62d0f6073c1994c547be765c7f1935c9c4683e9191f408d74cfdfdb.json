{"ast":null,"code":"// api/add_files.js\nimport axios from \"axios\";\nconst API_URL = \"http://127.0.0.1:5000/api\";\nconst uploadFile = async (file, entity_type, entity_id, file_type, description) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"entity_type\", entity_type);\n  formData.append(\"entity_id\", entity_id);\n  formData.append(\"file_type\", file_type);\n  formData.append(\"description\", description);\n  try {\n    const token = localStorage.getItem('jwtToken');\n    const response = await axios.post(API_URL + \"/upload_file\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        tokenJWTAuthorization: token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Ошибка при загрузке файла:\", error);\n    return {\n      status: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) || 500,\n      message: error.message\n    };\n  }\n};\nconst uploadFileToBackend = async (file, {\n  entityType,\n  entityId,\n  fileType\n}) => {\n  if (!file) return;\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"entity_type\", entityType);\n  formData.append(\"entity_id\", entityId);\n  formData.append(\"file_type\", fileType);\n  const token = localStorage.getItem('jwtToken');\n  try {\n    const response = await fetch(API_URL + \"/upload_file\", {\n      method: \"POST\",\n      headers: {\n        tokenJWTAuthorization: token // Добавляем токен в заголовок\n      },\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка загрузки файла\");\n    }\n    // Можно обработать ответ сервера, например, показать уведомление\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst deleteFile = async (entityType, entityId, fileType, fileName) => {\n  const token = localStorage.getItem(\"jwtToken\");\n  try {\n    const response = await fetch(API_URL + \"/files\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        tokenJWTAuthorization: token\n      },\n      body: JSON.stringify({\n        entity_type: entityType,\n        entity_id: entityId,\n        file_type: fileType,\n        file_name: fileName\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Ошибка при удалении файла: \" + response);\n    }\n    return true; // Возвращаем true, если удаление прошло успешно\n  } catch (error) {\n    console.error(error);\n    return false; // В случае ошибки возвращаем false\n  }\n};\nexport { uploadFile, uploadFileToBackend, deleteFile };","map":{"version":3,"names":["axios","API_URL","uploadFile","file","entity_type","entity_id","file_type","description","formData","FormData","append","token","localStorage","getItem","response","post","headers","tokenJWTAuthorization","data","error","_error$response","console","status","message","uploadFileToBackend","entityType","entityId","fileType","fetch","method","body","ok","Error","deleteFile","fileName","JSON","stringify","file_name"],"sources":["/home/noir/projects/diplom/front/src/api/add_files.js"],"sourcesContent":["// api/add_files.js\nimport axios from \"axios\";\nconst API_URL = \"http://127.0.0.1:5000/api\";\n\nconst uploadFile = async (file, entity_type, entity_id, file_type, description) => {\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"entity_type\", entity_type);\n    formData.append(\"entity_id\", entity_id);\n    formData.append(\"file_type\", file_type);\n    formData.append(\"description\", description);\n\n    try {\n        const token = localStorage.getItem('jwtToken');\n        const response = await axios.post(API_URL+\"/upload_file\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                tokenJWTAuthorization: token,\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"Ошибка при загрузке файла:\", error);\n        return { status: error.response?.status || 500, message: error.message };\n    }\n};\n\nconst uploadFileToBackend = async (file, { entityType, entityId, fileType }) => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"entity_type\", entityType);\n    formData.append(\"entity_id\", entityId);\n    formData.append(\"file_type\", fileType);\n    const token = localStorage.getItem('jwtToken');\n    try {\n        const response = await fetch(API_URL+\"/upload_file\", {\n            method: \"POST\",\n            headers: {\n                tokenJWTAuthorization: token, // Добавляем токен в заголовок\n            },\n            body: formData,\n        });\n        if (!response.ok) {\n            throw new Error(\"Ошибка загрузки файла\");\n        }\n        // Можно обработать ответ сервера, например, показать уведомление\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nconst deleteFile = async (entityType, entityId, fileType, fileName) => {\n    const token = localStorage.getItem(\"jwtToken\");\n\n    try {\n        const response = await fetch(API_URL+\"/files\", {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                tokenJWTAuthorization: token,\n            },\n            body: JSON.stringify({\n                entity_type: entityType,\n                entity_id: entityId,\n                file_type: fileType,\n                file_name: fileName,\n            }),\n        });\n\n        if (!response.ok) {\n            throw new Error(\"Ошибка при удалении файла: \"+response);\n        }\n        return true; // Возвращаем true, если удаление прошло успешно\n    } catch (error) {\n        console.error(error);\n        return false; // В случае ошибки возвращаем false\n    }\n};\n\nexport { uploadFile, uploadFileToBackend, deleteFile  };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}