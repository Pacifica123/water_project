{"ast":null,"code":"var _jsxFileName = \"/home/noir/projects/diplom/front/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\"; // Стили для дизайна, похожего на пример\nimport LoginPage from \"./components/LoginPage\";\nimport ProtectedContent from \"./components/ProtectedContent\"; // Основной компонент приложения\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Проверка токена при загрузке страницы\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwtToken\");\n    if (token) {\n      setIsAuthenticated(false);\n    }\n  }, []);\n  const handleLogin = () => {\n    setIsAuthenticated(true);\n  };\n  const axiosInstance = axios.create({\n    baseURL: 'http://127.0.0.1:5000/api' // Укажите ваш базовый URL\n  });\n\n  // Перехватчик для обработки ошибок\n  axiosInstance.interceptors.response.use(response => response, error => {\n    if (error.response && error.response.status === 401) {\n      // Здесь вызываем функцию выхода из сессии\n      handleLogout();\n    }\n    return Promise.reject(error);\n  });\n  const handleLogout = () => {\n    console.log(\"Выход из системы\");\n    localStorage.clear(); // Удаляет все данные из localStorage\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: isAuthenticated ? /*#__PURE__*/_jsxDEV(ProtectedContent, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LoginPage","ProtectedContent","axios","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","handleLogin","axiosInstance","create","baseURL","interceptors","response","use","error","status","handleLogout","Promise","reject","console","log","clear","className","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["/home/noir/projects/diplom/front/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\"; // Стили для дизайна, похожего на пример\nimport LoginPage from \"./components/LoginPage\";\nimport ProtectedContent from \"./components/ProtectedContent\"; // Основной компонент приложения\nimport axios from 'axios';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Проверка токена при загрузке страницы\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwtToken\");\n    if (token) {\n      setIsAuthenticated(false);\n    }\n  }, []);\n\n  const handleLogin = () => {\n    setIsAuthenticated(true);\n  };\n\n\n  const axiosInstance = axios.create({\n    baseURL: 'http://127.0.0.1:5000/api', // Укажите ваш базовый URL\n  });\n\n  // Перехватчик для обработки ошибок\n  axiosInstance.interceptors.response.use(\n    response => response,\n    error => {\n      if (error.response && error.response.status === 401) {\n        // Здесь вызываем функцию выхода из сессии\n        handleLogout();\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  const handleLogout = () => {\n    console.log(\"Выход из системы\");\n    localStorage.clear(); // Удаляет все данные из localStorage\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <div className=\"app\">\n      {isAuthenticated ? (\n        <ProtectedContent onLogout={handleLogout} />\n      ) : (\n        <LoginPage onLogin={handleLogin} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW,CAAC,CAAC;AACpB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,gBAAgB,MAAM,+BAA+B,CAAC,CAAC;AAC9D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,IAAIF,KAAK,EAAE;MACTD,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxBJ,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAGD,MAAMK,aAAa,GAAGX,KAAK,CAACY,MAAM,CAAC;IACjCC,OAAO,EAAE,2BAA2B,CAAE;EACxC,CAAC,CAAC;;EAEF;EACAF,aAAa,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CACrCD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;IACP,IAAIA,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;MACnD;MACAC,YAAY,CAAC,CAAC;IAChB;IACA,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;EAC9B,CACF,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/Bf,YAAY,CAACgB,KAAK,CAAC,CAAC,CAAC,CAAC;IACtBlB,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACEJ,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBrB,eAAe,gBACdH,OAAA,CAACH,gBAAgB;MAAC4B,QAAQ,EAAER;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE5C7B,OAAA,CAACJ,SAAS;MAACkC,OAAO,EAAEtB;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACnC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3B,EAAA,CA/CQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}